<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="supportMapper">

	<resultMap id="resultQna" type="QnaVo">
		<id property="qna_no" column="QNA_NO" />
		<id property="qna_title" column="QNA_TITLE" />
		<id property="qna_content" column="QNA_CONTENT" />
		<id property="qna_writer" column="QNA_WRITER" />
		<id property="rename_qfilename" column="RENAME_QFILENAME" />
		<id property="qna_date" column="QNA_DATE" />
		<id property="qna_status" column="QNA_STATUS" />
		<id property="qna_answer" column="QNA_ANSWER" />
		<id property="qna_answerdate" column="QNA_ANSWERDATE" />
		<id property="rename_afilename" column="RENAME_AFILENAME" />
		<id property="qna_answerwriter" column="QNA_ANSWERWRITER" />
		<id property="qna_deletestatus" column="QNA_DELETESTATUS" />
	</resultMap>

	<resultMap id="resultNoticeVo" type="NoticeVo">
		<id property="notice_no" column="NOTICE_NO" />
		<id property="notice_title" column="NOTICE_TITLE" />
		<id property="notice_content" column="NOTICE_CONTENT" />
		<id property="notice_writer" column="NOTICE_WRITER" />
		<id property="originalname_nfilename" column="ORIGINALNAME_NFILENAME" />
		<id property="rename_nfilename" column="RENAME_NFILENAME" />
		<id property="notice_date" column="NOTICE_DATE" />
		<id property="notice_deletestatus" column="NOTICE_DELETESTATUS" />
	</resultMap>
	

	<insert id="qnaInsert" parameterType="QnaVo">
	
	</insert>
	<select id="selectNoticeList" resultMap="resultNoticeVo">
	select * from tb_notice where NOTICE_DELETESTATUS = 'N' order by notice_no desc
	</select>
	<insert id="insertNotice" parameterType="NoticeVo">
		<selectKey keyProperty="notice_no" resultType="int" order="BEFORE">
			select count(1)+1 from tb_notice
		</selectKey>
		insert into tb_notice (NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_WRITER, ORIGINALNAME_NFILENAME, RENAME_NFILENAME, NOTICE_DATE, NOTICE_DELETESTATUS)
		values
		(#{notice_no},#{notice_title},#{notice_content},#{notice_writer},#{originalname_nfilename},#{rename_nfilename},default,default)
	</insert>
	
	<!-- 2. ROWNUM Query -->
    <select id="selectPaging" parameterType="pagingVo" resultType="NoticeVo">
       SELECT * FROM (SELECT ROWNUM RNUM, P.* FROM 
       (SELECT * FROM TB_NOTICE 
		<if test="items != null and items != '' ">
   		where notice_title like '%' ||  #{items} || '%'
		</if>
       	ORDER BY NOTICE_NO DESC ) P )
       WHERE RNUM BETWEEN ${start} AND ${last}
    </select>
    <!-- 2. Total Query -->
    <select id="selectTotalPaging" resultType="_int">
        SELECT COUNT(1) FROM TB_NOTICE  
    </select>
	<select id="selectTotalPagingSearch" parameterType="pagingVo" resultType="_int">
        SELECT COUNT(1) FROM TB_NOTICE 
        where notice_title like '%' || #{items} || '%'
    </select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 
	
	<select id="getListCount" resultType="_int" >
		select count(*) from board
	</select>
	<select id="selectList" resultMap="resultboard" parameterType="Board" useCache="true">
		<![CDATA[
		SELECT * FROM 
		(SELECT ROWNUM RNUM, BOARD_NUM, BOARD_WRITER, 
				BOARD_TITLE, BOARD_CONTENT, 
				BOARD_ORIGINAL_FILENAME, 
				BOARD_RENAME_FILENAME, BOARD_REF, 
				BOARD_REPLY_REF, BOARD_REPLY_LEV, 
				BOARD_REPLY_SEQ, BOARD_READCOUNT, 
				BOARD_DATE 
				FROM (SELECT * FROM BOARD 
				ORDER BY BOARD_REF DESC, BOARD_REPLY_REF ASC, 
				BOARD_REPLY_LEV ASC, BOARD_REPLY_SEQ ASC))
				WHERE RNUM >= #{startRow} AND RNUM  <=  #{endRow}
				]]>
	</select>
	<update id="addReadCount" parameterType="_int" >
		update board 
				set BOARD_READCOUNT = BOARD_READCOUNT + 1 
				where BOARD_NUM = #{keyword}
	</update>
	<select id="selectBoard"  resultMap="resultboard"  parameterType="_int">
		select * from board 
				where board_num = #{keyword}
	</select>
	
	<insert id="insertBoard" parameterType="Board">
		insert into board (BOARD_NUM, BOARD_WRITER , BOARD_TITLE,BOARD_CONTENT
		<if test="boardOriginalFileName != null">
		,BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME
		</if>
		,BOARD_REF,BOARD_REPLY_REF,BOARD_REPLY_LEV,BOARD_REPLY_SEQ,BOARD_READCOUNT,BOARD_DATE
		)values((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}, 
				<if test="boardOriginalFileName != null">
				#{boardOriginalFileName}, #{boardRenameFileName},
				</if>
				(select max(board_num) + 1 from board), 
				0, 0, 0, default, default)
	</insert>
	
	<insert id="insertReply1" parameterType="Board">
		insert into board values 
				((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}, NULL, NULL, #{boardRef}, 
				(select max(board_num) + 1 from board), 
				1, #{boardReplySeq}, default, default)

	</insert>
	<insert id="insertReply2" parameterType="Board">
		insert into board values 
				((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}, NULL, NULL, 
				#{boardRef}, #{boardReplyRef}, 2, #{boardReplySeq}, default, default)
	</insert>
	
	<insert id="insertReply">
		<if test="boardReplyLev==1">
		insert into board values 
				((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}, NULL, NULL, #{boardRef}, 
				(select max(board_num) + 1 from board), 
				1, #{boardReplySeq}, default, default)
		</if>
		<if test="boardReplyLev==2">
		insert into board values 
				((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}, NULL, NULL, 
				#{boardRef}, #{boardReplyRef}, 2, #{boardReplySeq}, default, default)
		</if>
	
	</insert>
	
	
	<update id="updateReplySeq" parameterType="Board">
		update board 
					set board_reply_seq = board_reply_seq + 1 
					where board_ref = #{boardRef} 
					and board_reply_lev = #{boardReplyLev} 
					and board_reply_ref = #{boardReplyRef} 
	</update>
	<update id="updateReply" parameterType="_int">
		update board 
				set board_title = #{boardTitle} , board_content = #{boardContent} 
				where board_num = #{boardNum} 
	</update>
	
	<update id="updateBoard" parameterType="Board">
		update board 
				set board_title = #{boardTitle} , 
				board_content = #{boardContent} 
				<include refid="filepath"/>
				where board_num = #{boardNum} 
	</update>
	<sql id="filepath">
	<if test="boardOriginalFileName != null">
	, board_original_filename = #{boardOriginalFileName} , 
	board_rename_filename = #{boardRenameFileName}  
	</if>
	</sql>
	
	<delete id="deleteBoard" parameterType="_int">
	delete from board where board_num = #{boardNum} 
	</delete>
	<select id="selectDateList" resultMap="resultboard"  parameterType="Board">
		<![CDATA[
		SELECT * 
				FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_WRITER,  
				BOARD_TITLE, BOARD_CONTENT, 
				BOARD_ORIGINAL_FILENAME, 
				BOARD_RENAME_FILENAME, BOARD_REF, 
				BOARD_REPLY_REF, BOARD_REPLY_LEV, 
				BOARD_REPLY_SEQ, BOARD_READCOUNT, 
				BOARD_DATE 
				FROM (SELECT * FROM BOARD where board_date between #{begin}  and #{end}  
				ORDER BY BOARD_REF DESC, BOARD_REPLY_REF ASC, 
				BOARD_REPLY_LEV ASC, BOARD_REPLY_SEQ ASC)) 
				WHERE RNUM >= #{startRow}  AND RNUM <= #{endRow} 
				]]>
	</select>
	<select id="selectWriterList" resultMap="resultboard"  parameterType="Board">
	<![CDATA[
	SELECT * 
				FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_WRITER,
				BOARD_TITLE, BOARD_CONTENT, 
				BOARD_ORIGINAL_FILENAME, 
				BOARD_RENAME_FILENAME, BOARD_REF, 
				BOARD_REPLY_REF, BOARD_REPLY_LEV, 
				BOARD_REPLY_SEQ, BOARD_READCOUNT, 
				BOARD_DATE 
				FROM (SELECT * FROM BOARD where board_writer like '%'||#{boardWriter}||'%' 
				ORDER BY BOARD_REF DESC, BOARD_REPLY_REF ASC, 
				BOARD_REPLY_LEV ASC, BOARD_REPLY_SEQ ASC)) 
				WHERE RNUM >= #{startRow}  AND RNUM <= #{endRow} 
	]]>
	</select>
	<select id="selectTitleList" resultMap="resultboard"  parameterType="Board">
	<![CDATA[
	SELECT * 
				FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_WRITER, 
				BOARD_TITLE, BOARD_CONTENT, 
				BOARD_ORIGINAL_FILENAME, 
				BOARD_RENAME_FILENAME, BOARD_REF, 
				BOARD_REPLY_REF, BOARD_REPLY_LEV, 
				BOARD_REPLY_SEQ, BOARD_READCOUNT, 
				BOARD_DATE 
				FROM (SELECT * FROM BOARD where board_title like '%'||#{boardTitle}||'%'
				ORDER BY BOARD_REF DESC, BOARD_REPLY_REF ASC,  
				BOARD_REPLY_LEV ASC, BOARD_REPLY_SEQ ASC)) 
				WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	]]>
	</select>
	
	<select id="selectReadCountTop5"  resultMap="resultboard" >
		<![CDATA[
		SELECT *  
				FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_TITLE, 
				BOARD_READCOUNT 
				FROM (SELECT * 
				FROM BOARD 
				WHERE BOARD_REPLY_LEV = 0 
				ORDER BY BOARD_READCOUNT DESC))
				WHERE RNUM >= 1 AND RNUM <= 5
				]]>
	</select>
 -->

</mapper>
